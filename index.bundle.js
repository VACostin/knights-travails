(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}"],sourceRoot:""}]);const s=a},28:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),s=t(667),c=t.n(s),l=new URL(t(332),t.b),A=new URL(t(17),t.b),d=a()(o()),u=c()(l),h=c()(A);d.push([n.id,`/* Small screens - MOBILE */\n@media only screen {\n  :root {\n    --min-res: calc(min(97vh, 97vw));\n  }\n\n  * {\n    color: white;\n  }\n\n  *:not(img) {\n    user-select: none;\n    -webkit-user-drag: none;\n  }\n\n  body {\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #chessboard {\n    background-color: black;\n    width: var(--min-res);\n    height: var(--min-res);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.8vw;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  }\n\n  #topMargin, #bottomMargin {\n    width: 92%;\n    height: 4%;\n    display: flex;\n    align-items: center;\n  }\n\n  .letter {\n    width: 12.5%;\n    text-align: center;\n  }\n\n  #middleSection {\n    width: 100%;\n    height: 92%;\n    display: flex;\n    align-items: center;\n  }\n\n  #leftMargin, #rightMargin {\n    width: 4%;\n    height: 100%;\n    padding-top: 7%;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .digit {\n    height: 12.5%;\n    text-align: center;\n  }\n\n  #actualBoard {\n    position: relative;\n    width: 92%;\n    height: 100%;\n  }\n\n  #horseIcon {\n    position: absolute;\n    content: url(${u});\n    width: 10%;\n    height: 10%;\n  }\n\n  #targetIcon {\n    position: absolute;\n    content: url(${h});\n    width: 10%;\n    height: 10%;\n    display: none;\n  }\n\n  .row {\n    width: 100%;\n    height: 12.5%;\n    display: flex;\n  }\n\n\n  .square {\n    width: 12.5%;\n    height: 100%;\n  }\n\n  .row:nth-child(2n) .square:nth-child(2n),\n  .row:nth-child(2n - 1) .square:nth-child(2n - 1) {\n    background-color: rgb(209, 139, 71);\n  }\n\n  .row:nth-child(2n) .square:nth-child(2n - 1),\n  .row:nth-child(2n - 1) .square:nth-child(2n) {\n    background-color: rgb(255, 206, 158);\n  }\n\n}\n\n/* Medium - Large screens */\n@media only screen and (min-width: 40.063em) {\n} /* min-width 641px, medium screens */\n`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,2BAA2B;AAC3B;EACE;IACE,gCAAgC;EAClC;;EAEA;IACE,YAAY;EACd;;EAEA;IACE,iBAAiB;IACjB,uBAAuB;EACzB;;EAEA;IACE,YAAY;IACZ,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;EACrB;;EAEA;IACE,uBAAuB;IACvB,qBAAqB;IACrB,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;IAChB,6EAA6E;EAC/E;;EAEA;IACE,UAAU;IACV,UAAU;IACV,aAAa;IACb,mBAAmB;EACrB;;EAEA;IACE,YAAY;IACZ,kBAAkB;EACpB;;EAEA;IACE,WAAW;IACX,WAAW;IACX,aAAa;IACb,mBAAmB;EACrB;;EAEA;IACE,SAAS;IACT,YAAY;IACZ,eAAe;IACf,aAAa;IACb,sBAAsB;EACxB;;EAEA;IACE,aAAa;IACb,kBAAkB;EACpB;;EAEA;IACE,kBAAkB;IAClB,UAAU;IACV,YAAY;EACd;;EAEA;IACE,kBAAkB;IAClB,gDAAqD;IACrD,UAAU;IACV,WAAW;EACb;;EAEA;IACE,kBAAkB;IAClB,gDAA+B;IAC/B,UAAU;IACV,WAAW;IACX,aAAa;EACf;;EAEA;IACE,WAAW;IACX,aAAa;IACb,aAAa;EACf;;;EAGA;IACE,YAAY;IACZ,YAAY;EACd;;EAEA;;IAEE,mCAAmC;EACrC;;EAEA;;IAEE,oCAAoC;EACtC;;AAEF;;AAEA,2BAA2B;AAC3B;AACA,EAAE,oCAAoC",sourcesContent:["/* Small screens - MOBILE */\r\n@media only screen {\r\n  :root {\r\n    --min-res: calc(min(97vh, 97vw));\r\n  }\r\n\r\n  * {\r\n    color: white;\r\n  }\r\n\r\n  *:not(img) {\r\n    user-select: none;\r\n    -webkit-user-drag: none;\r\n  }\r\n\r\n  body {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  #chessboard {\r\n    background-color: black;\r\n    width: var(--min-res);\r\n    height: var(--min-res);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1.8vw;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  }\r\n\r\n  #topMargin, #bottomMargin {\r\n    width: 92%;\r\n    height: 4%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .letter {\r\n    width: 12.5%;\r\n    text-align: center;\r\n  }\r\n\r\n  #middleSection {\r\n    width: 100%;\r\n    height: 92%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  #leftMargin, #rightMargin {\r\n    width: 4%;\r\n    height: 100%;\r\n    padding-top: 7%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .digit {\r\n    height: 12.5%;\r\n    text-align: center;\r\n  }\r\n\r\n  #actualBoard {\r\n    position: relative;\r\n    width: 92%;\r\n    height: 100%;\r\n  }\r\n\r\n  #horseIcon {\r\n    position: absolute;\r\n    content: url(\"./portablejim-Chess-tile-Knight-2.svg\");\r\n    width: 10%;\r\n    height: 10%;\r\n  }\r\n\r\n  #targetIcon {\r\n    position: absolute;\r\n    content: url(\"./target-39.svg\");\r\n    width: 10%;\r\n    height: 10%;\r\n    display: none;\r\n  }\r\n\r\n  .row {\r\n    width: 100%;\r\n    height: 12.5%;\r\n    display: flex;\r\n  }\r\n\r\n\r\n  .square {\r\n    width: 12.5%;\r\n    height: 100%;\r\n  }\r\n\r\n  .row:nth-child(2n) .square:nth-child(2n),\r\n  .row:nth-child(2n - 1) .square:nth-child(2n - 1) {\r\n    background-color: rgb(209, 139, 71);\r\n  }\r\n\r\n  .row:nth-child(2n) .square:nth-child(2n - 1),\r\n  .row:nth-child(2n - 1) .square:nth-child(2n) {\r\n    background-color: rgb(255, 206, 158);\r\n  }\r\n\r\n}\r\n\r\n/* Medium - Large screens */\r\n@media only screen and (min-width: 40.063em) {\r\n} /* min-width 641px, medium screens */\r\n"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],A=i[l]||0,d="".concat(l," ").concat(A);i[l]=A+1;var u=t(d),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(h);else{var p=o(h,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var c=r(n,o),l=0;l<i.length;l++){var A=t(i[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},332:(n,e,t)=>{n.exports=t.p+"161c8461993678135a1b.svg"},17:(n,e,t)=>{n.exports=t.p+"865e8a6608a55486315f.svg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),s=t(565),c=t.n(s),l=t(216),A=t.n(l),d=t(589),u=t.n(d),h=t(28),p={};p.styleTagTransform=u(),p.setAttributes=c(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=A(),e()(h.Z,p),h.Z&&h.Z.locals&&h.Z.locals;var f=t(917),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=A(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const g=(()=>{let n=0,e=0;const t=(n,e,r,o,i)=>{if(0===i)return n===r&&e===o&&[[n,e]];if(n>=8||e>=8)return!1;let a=t(n+1,e+2,r,o,i-1)||t(n+2,e+1,r,o,i-1)||t(n+2,e-1,r,o,i-1)||t(n+1,e-2,r,o,i-1)||t(n-1,e-2,r,o,i-1)||t(n-2,e-1,r,o,i-1)||t(n-2,e+1,r,o,i-1)||t(n-1,e+2,r,o,i-1);return!1!==a&&(a=[[n,e],...a]),a};return{placeAt:(t,r)=>{n=t,e=r},findShortestPathTo:(r,o)=>{let i=0;for(;i<8;){const a=t(n,e,r,o,i);if(!1!==a)return a;i+=1}return!1}}})(),C=(()=>{let n=document.querySelector("#horseIcon");const e=document.querySelector("#actualBoard"),t=document.querySelector("#targetIcon"),r=document.querySelector("body"),o=(e,t)=>{n.style.top="auto",n.style.left=1+12.5*e+"%",n.style.bottom=1+12.5*t+"%"},i=function(t){const r=e.clientWidth,o=e.clientHeight,i=e.getBoundingClientRect(),a=t.pageX-i.left-r/25,s=t.pageY-i.top-o/25;n.style.left=`${a}px`,n.style.top=`${s}px`};return{placeAt:o,placeTarget:(n,e)=>{t.style.left=1+12.5*n+"%",t.style.bottom=1+12.5*e+"%",t.style.display="inline"},traversePath:async i=>{let a,s;r.style.pointerEvents="none";[a,s]=[...i.shift()];const c={duration:1e3,iterations:1,fill:"forwards"};for(;i.length>0;){let e,t;[e,t]=[...i.shift()];const r=[{left:1+12.5*a+"%",bottom:1+12.5*s+"%"},{left:1+12.5*e+"%",bottom:1+12.5*t+"%"}];n.animate(r,c),0===i.length?await new Promise((n=>setTimeout(n,1e3))):await new Promise((n=>setTimeout(n,1300))),a=e,s=t}((i,a)=>{r.style.pointerEvents="auto",n.remove(),n=n.cloneNode(),e.insertBefore(n,e.firstChild),o(i,a),t.style.display="none",t.style.left="auto",t.style.bottom="auto"})(a,s)},getKnightPosition:()=>{const e=n.getBoundingClientRect();return[e.left,e.top]},setEventListener:(e,t)=>{n.addEventListener(e,t)},followCursor:()=>{e.addEventListener("mousemove",i)},unfollowCursor:()=>{e.removeEventListener("mousemove",i)}}})(),b=C;(function(){let n=0,e=0;const t=[];function r(){b.followCursor()}function o(){b.unfollowCursor();const r=b.getKnightPosition();let o,i=1e5;t.forEach((n=>{const e=n.getDistance(...r);e<i&&(i=e,o=n)})),[n,e]=[...o.getXY()],g.placeAt(n,e),b.placeAt(n,e)}async function i(t,i){if(t!==n||i!==e){b.placeTarget(t,i);const n=g.findShortestPathTo(t,i);await b.traversePath(n),b.setEventListener("mousedown",r),b.setEventListener("mouseup",o),g.placeAt(t,i)}}return{init:function(){g.placeAt(n,e),b.placeAt(n,e),b.setEventListener("mousedown",r),b.setEventListener("mouseup",o);const a=document.querySelectorAll(".row");let s=7;a.forEach((n=>{const e=n.querySelectorAll(".square");let r=0;e.forEach((n=>{const e=function(n,e,t){return{setEventListener:function(r,o){t.addEventListener(r,(()=>o(n,e)))},getDistance:function(n,e){const r=t.getBoundingClientRect(),o=r.left,i=r.top;return Math.sqrt((n-o)**2+(e-i)**2)},getXY:function(){return[n,e]}}}(r++,s,n);e.setEventListener("click",i),t.push(e)})),s-=1}))}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,