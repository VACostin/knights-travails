(()=>{"use strict";var n={917:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}","",{version:3,sources:["webpack://./src/reset.css"],names:[],mappings:"AAAA;;;CAGC;;AAED;;;;;;;;;;;;;CAaC,SAAS;CACT,UAAU;CACV,SAAS;CACT,eAAe;CACf,aAAa;CACb,wBAAwB;AACzB;AACA,gDAAgD;AAChD;;CAEC,cAAc;AACf;AACA;CACC,cAAc;AACf;AACA;CACC,gBAAgB;AACjB;AACA;CACC,YAAY;AACb;AACA;;CAEC,WAAW;CACX,aAAa;AACd;AACA;CACC,yBAAyB;CACzB,iBAAiB;AAClB",sourcesContent:["/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}"],sourceRoot:""}]);const s=a},28:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),s=t(667),c=t.n(s),l=new URL(t(332),t.b),A=new URL(t(17),t.b),d=a()(o()),u=c()(l),h=c()(A);d.push([n.id,`/* Small screens - MOBILE */\n@media only screen {\n  :root {\n    --min-res: calc(min(97vh, 97vw));\n  }\n\n  * {\n    color: white;\n  }\n\n  *:not(img) {\n    user-select: none;\n    -webkit-user-drag: none;\n  }\n\n  body {\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  #chessboard {\n    background-color: black;\n    width: var(--min-res);\n    height: var(--min-res);\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: 1.8vw;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  }\n\n  #topMargin, #bottomMargin {\n    width: 92%;\n    height: 4%;\n    display: flex;\n    align-items: center;\n  }\n\n  .letter {\n    width: 12.5%;\n    text-align: center;\n  }\n\n  #middleSection {\n    width: 100%;\n    height: 92%;\n    display: flex;\n    align-items: center;\n  }\n\n  #leftMargin, #rightMargin {\n    width: 4%;\n    height: 100%;\n    padding-top: 7%;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .digit {\n    height: 12.5%;\n    text-align: center;\n  }\n\n  #actualBoard {\n    position: relative;\n    width: 92%;\n    height: 100%;\n  }\n\n  #horseIcon {\n    position: absolute;\n    content: url(${u});\n    width: 10%;\n    height: 10%;\n  }\n\n  #targetIcon {\n    position: absolute;\n    content: url(${h});\n    width: 10%;\n    height: 10%;\n    display: none;\n  }\n\n  .row {\n    width: 100%;\n    height: 12.5%;\n    display: flex;\n  }\n\n\n  .square {\n    width: 12.5%;\n    height: 100%;\n  }\n\n  .row:nth-child(2n) .square:nth-child(2n),\n  .row:nth-child(2n - 1) .square:nth-child(2n - 1) {\n    background-color: rgb(209, 139, 71);\n  }\n\n  .row:nth-child(2n) .square:nth-child(2n - 1),\n  .row:nth-child(2n - 1) .square:nth-child(2n) {\n    background-color: rgb(255, 206, 158);\n  }\n\n}\n\n/* Medium - Large screens */\n@media only screen and (min-width: 40.063em) {\n} /* min-width 641px, medium screens */\n`,"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA,2BAA2B;AAC3B;EACE;IACE,gCAAgC;EAClC;;EAEA;IACE,YAAY;EACd;;EAEA;IACE,iBAAiB;IACjB,uBAAuB;EACzB;;EAEA;IACE,YAAY;IACZ,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;EACrB;;EAEA;IACE,uBAAuB;IACvB,qBAAqB;IACrB,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;IACvB,gBAAgB;IAChB,6EAA6E;EAC/E;;EAEA;IACE,UAAU;IACV,UAAU;IACV,aAAa;IACb,mBAAmB;EACrB;;EAEA;IACE,YAAY;IACZ,kBAAkB;EACpB;;EAEA;IACE,WAAW;IACX,WAAW;IACX,aAAa;IACb,mBAAmB;EACrB;;EAEA;IACE,SAAS;IACT,YAAY;IACZ,eAAe;IACf,aAAa;IACb,sBAAsB;EACxB;;EAEA;IACE,aAAa;IACb,kBAAkB;EACpB;;EAEA;IACE,kBAAkB;IAClB,UAAU;IACV,YAAY;EACd;;EAEA;IACE,kBAAkB;IAClB,gDAAqD;IACrD,UAAU;IACV,WAAW;EACb;;EAEA;IACE,kBAAkB;IAClB,gDAA+B;IAC/B,UAAU;IACV,WAAW;IACX,aAAa;EACf;;EAEA;IACE,WAAW;IACX,aAAa;IACb,aAAa;EACf;;;EAGA;IACE,YAAY;IACZ,YAAY;EACd;;EAEA;;IAEE,mCAAmC;EACrC;;EAEA;;IAEE,oCAAoC;EACtC;;AAEF;;AAEA,2BAA2B;AAC3B;AACA,EAAE,oCAAoC",sourcesContent:["/* Small screens - MOBILE */\r\n@media only screen {\r\n  :root {\r\n    --min-res: calc(min(97vh, 97vw));\r\n  }\r\n\r\n  * {\r\n    color: white;\r\n  }\r\n\r\n  *:not(img) {\r\n    user-select: none;\r\n    -webkit-user-drag: none;\r\n  }\r\n\r\n  body {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  #chessboard {\r\n    background-color: black;\r\n    width: var(--min-res);\r\n    height: var(--min-res);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 1.8vw;\r\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  }\r\n\r\n  #topMargin, #bottomMargin {\r\n    width: 92%;\r\n    height: 4%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  .letter {\r\n    width: 12.5%;\r\n    text-align: center;\r\n  }\r\n\r\n  #middleSection {\r\n    width: 100%;\r\n    height: 92%;\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n\r\n  #leftMargin, #rightMargin {\r\n    width: 4%;\r\n    height: 100%;\r\n    padding-top: 7%;\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .digit {\r\n    height: 12.5%;\r\n    text-align: center;\r\n  }\r\n\r\n  #actualBoard {\r\n    position: relative;\r\n    width: 92%;\r\n    height: 100%;\r\n  }\r\n\r\n  #horseIcon {\r\n    position: absolute;\r\n    content: url(\"./portablejim-Chess-tile-Knight-2.svg\");\r\n    width: 10%;\r\n    height: 10%;\r\n  }\r\n\r\n  #targetIcon {\r\n    position: absolute;\r\n    content: url(\"./target-39.svg\");\r\n    width: 10%;\r\n    height: 10%;\r\n    display: none;\r\n  }\r\n\r\n  .row {\r\n    width: 100%;\r\n    height: 12.5%;\r\n    display: flex;\r\n  }\r\n\r\n\r\n  .square {\r\n    width: 12.5%;\r\n    height: 100%;\r\n  }\r\n\r\n  .row:nth-child(2n) .square:nth-child(2n),\r\n  .row:nth-child(2n - 1) .square:nth-child(2n - 1) {\r\n    background-color: rgb(209, 139, 71);\r\n  }\r\n\r\n  .row:nth-child(2n) .square:nth-child(2n - 1),\r\n  .row:nth-child(2n - 1) .square:nth-child(2n) {\r\n    background-color: rgb(255, 206, 158);\r\n  }\r\n\r\n}\r\n\r\n/* Medium - Large screens */\r\n@media only screen and (min-width: 40.063em) {\r\n} /* min-width 641px, medium screens */\r\n"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var l=0;l<n.length;l++){var A=[].concat(n[l]);r&&a[A[0]]||(void 0!==i&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=i),t&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=t):A[2]=t),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),e.push(A))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],A=i[l]||0,d="".concat(l," ").concat(A);i[l]=A+1;var u=t(d),h={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(h);else{var p=o(h,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:p,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var c=r(n,o),l=0;l<i.length;l++){var A=t(i[l]);0===e[A].references&&(e[A].updater(),e.splice(A,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},332:(n,e,t)=>{n.exports=t.p+"161c8461993678135a1b.svg"},17:(n,e,t)=>{n.exports=t.p+"865e8a6608a55486315f.svg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),s=t(565),c=t.n(s),l=t(216),A=t.n(l),d=t(589),u=t.n(d),h=t(28),p={};p.styleTagTransform=u(),p.setAttributes=c(),p.insert=a().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=A(),e()(h.Z,p),h.Z&&h.Z.locals&&h.Z.locals;var f=t(917),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=a().bind(null,"head"),m.domAPI=o(),m.insertStyleElement=A(),e()(f.Z,m),f.Z&&f.Z.locals&&f.Z.locals;const g=(()=>{let n=0,e=0;const t=(n,e,r,o,i)=>{if(0===i)return n===r&&e===o&&[[n,e]];if(n>=8||e>=8||n<0||e<0)return!1;let a=t(n+1,e+2,r,o,i-1)||t(n+2,e+1,r,o,i-1)||t(n+2,e-1,r,o,i-1)||t(n+1,e-2,r,o,i-1)||t(n-1,e-2,r,o,i-1)||t(n-2,e-1,r,o,i-1)||t(n-2,e+1,r,o,i-1)||t(n-1,e+2,r,o,i-1);return!1!==a&&(a=[[n,e],...a]),a};return{placeAt:(t,r)=>{n=t,e=r},findShortestPathTo:(r,o)=>{let i=0;for(;i<8;){const a=t(n,e,r,o,i);if(!1!==a)return a;i+=1}return!1}}})(),C=(()=>{let n=document.querySelector("#horseIcon");const e=document.querySelector("#actualBoard"),t=document.querySelector("#targetIcon"),r=document.querySelector("body"),o=(e,t)=>{n.style.top="auto",n.style.left=1+12.5*e+"%",n.style.bottom=1+12.5*t+"%"},i=function(t){const r=e.clientWidth,o=e.clientHeight,i=e.getBoundingClientRect(),a=t.pageX-i.left-r/25,s=t.pageY-i.top-o/25;n.style.left=`${a}px`,n.style.top=`${s}px`};return{placeAt:o,placeTarget:(n,e)=>{t.style.left=1+12.5*n+"%",t.style.bottom=1+12.5*e+"%",t.style.display="inline"},traversePath:async i=>{let a,s;r.style.pointerEvents="none";[a,s]=[...i.shift()];const c={duration:1e3,iterations:1,fill:"forwards"};for(;i.length>0;){let e,t;[e,t]=[...i.shift()];const r=[{left:1+12.5*a+"%",bottom:1+12.5*s+"%"},{left:1+12.5*e+"%",bottom:1+12.5*t+"%"}];n.animate(r,c),0===i.length?await new Promise((n=>setTimeout(n,1e3))):await new Promise((n=>setTimeout(n,1300))),a=e,s=t}((i,a)=>{r.style.pointerEvents="auto",n.remove(),n=n.cloneNode(),e.insertBefore(n,e.firstChild),o(i,a),t.style.display="none",t.style.left="auto",t.style.bottom="auto"})(a,s)},getKnightPosition:()=>{const e=n.getBoundingClientRect();return[e.left,e.top]},setEventListener:(e,t)=>{n.addEventListener(e,t)},followCursor:()=>{e.addEventListener("mousemove",i)},unfollowCursor:()=>{e.removeEventListener("mousemove",i)}}})(),b=C;(function(){let n=0,e=0;const t=[];function r(){b.followCursor()}function o(){b.unfollowCursor();const r=b.getKnightPosition();let o,i=1e5;t.forEach((n=>{const e=n.getDistance(...r);e<i&&(i=e,o=n)})),[n,e]=[...o.getXY()],g.placeAt(n,e),b.placeAt(n,e)}async function i(t,i){if(t!==n||i!==e){b.placeTarget(t,i);const n=g.findShortestPathTo(t,i);await b.traversePath(n),b.setEventListener("mousedown",r),b.setEventListener("mouseup",o),g.placeAt(t,i)}}return{init:function(){g.placeAt(n,e),b.placeAt(n,e),b.setEventListener("mousedown",r),b.setEventListener("mouseup",o);const a=document.querySelectorAll(".row");let s=7;a.forEach((n=>{const e=n.querySelectorAll(".square");let r=0;e.forEach((n=>{const e=function(n,e,t){return{setEventListener:function(r,o){t.addEventListener(r,(()=>o(n,e)))},getDistance:function(n,e){const r=t.getBoundingClientRect(),o=r.left,i=r.top;return Math.sqrt((n-o)**2+(e-i)**2)},getXY:function(){return[n,e]}}}(r++,s,n);e.setEventListener("click",i),t.push(e)})),s-=1}))}}})().init()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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VyxFQUFTQyxHQUM1QixNQUFNckQsRUFBU3VDLEVBQU90Qyx3QkFDaEJxRCxFQUFVdEQsRUFBT1AsS0FDakI4RCxFQUFVdkQsRUFBT1IsSUFJdkIsT0FIaUJnRSxLQUFLQyxNQUNuQkwsRUFBVUUsSUFBWSxHQUFLRCxFQUFVRSxJQUFZLEVBR3RELEVBU0ViLE1BUEYsV0FDRSxNQUFPLENBQUNwRSxFQUFHQyxFQUNiLEVBT0YsQ0Q2QjRCbUYsQ0FBVXBGLElBQUtDLEVBQUdnRSxHQUN0Q1UsRUFBWTFCLGlCQUFpQixRQUFTakIsR0FDdEMwQixFQUFZOU0sS0FBSytOLEVBQVksSUFFL0IxRSxHQUFLLENBQUMsR0FFVixFQUtGLEVFN0RxQm9GLEdBQ1JmLE0iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rbmlnaHRzLXRyYXZhaWxzLy4vc3JjL3Jlc2V0LmNzcyIsIndlYnBhY2s6Ly9rbmlnaHRzLXRyYXZhaWxzLy4vc3JjL3N0eWxlcy5jc3MiLCJ3ZWJwYWNrOi8va25pZ2h0cy10cmF2YWlscy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8va25pZ2h0cy10cmF2YWlscy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanMiLCJ3ZWJwYWNrOi8va25pZ2h0cy10cmF2YWlscy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL2tuaWdodHMtdHJhdmFpbHMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8va25pZ2h0cy10cmF2YWlscy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8va25pZ2h0cy10cmF2YWlscy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly9rbmlnaHRzLXRyYXZhaWxzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL2tuaWdodHMtdHJhdmFpbHMvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly9rbmlnaHRzLXRyYXZhaWxzLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8va25pZ2h0cy10cmF2YWlscy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly9rbmlnaHRzLXRyYXZhaWxzL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL2tuaWdodHMtdHJhdmFpbHMvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL2tuaWdodHMtdHJhdmFpbHMvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9rbmlnaHRzLXRyYXZhaWxzL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8va25pZ2h0cy10cmF2YWlscy93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9rbmlnaHRzLXRyYXZhaWxzL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL2tuaWdodHMtdHJhdmFpbHMvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2tuaWdodHMtdHJhdmFpbHMvLi9zcmMvc3R5bGVzLmNzcz80NGIyIiwid2VicGFjazovL2tuaWdodHMtdHJhdmFpbHMvLi9zcmMvcmVzZXQuY3NzP2VkZTAiLCJ3ZWJwYWNrOi8va25pZ2h0cy10cmF2YWlscy8uL3NyYy92aXJ0dWFsS25pZ2h0LmpzIiwid2VicGFjazovL2tuaWdodHMtdHJhdmFpbHMvLi9zcmMvRE9NS25pZ2h0LmpzIiwid2VicGFjazovL2tuaWdodHMtdHJhdmFpbHMvLi9zcmMvY2hlc3Nib2FyZC5qcyIsIndlYnBhY2s6Ly9rbmlnaHRzLXRyYXZhaWxzLy4vc3JjL0RPTVNxdWFyZS5qcyIsIndlYnBhY2s6Ly9rbmlnaHRzLXRyYXZhaWxzLy4vc3JjL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAvKiBodHRwOi8vbWV5ZXJ3ZWIuY29tL2VyaWMvdG9vbHMvY3NzL3Jlc2V0LyBcclxuICAgdjIuMCB8IDIwMTEwMTI2XHJcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXHJcbiovXHJcblxyXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXHJcbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYsIHAsIGJsb2NrcXVvdGUsIHByZSxcclxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxyXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXHJcbnNtYWxsLCBzdHJpa2UsIHN0cm9uZywgc3ViLCBzdXAsIHR0LCB2YXIsXHJcbmIsIHUsIGksIGNlbnRlcixcclxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcclxuZmllbGRzZXQsIGZvcm0sIGxhYmVsLCBsZWdlbmQsXHJcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkLFxyXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgXHJcbmZpZ3VyZSwgZmlnY2FwdGlvbiwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgXHJcbm1lbnUsIG5hdiwgb3V0cHV0LCBydWJ5LCBzZWN0aW9uLCBzdW1tYXJ5LFxyXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xyXG5cdG1hcmdpbjogMDtcclxuXHRwYWRkaW5nOiAwO1xyXG5cdGJvcmRlcjogMDtcclxuXHRmb250LXNpemU6IDEwMCU7XHJcblx0Zm9udDogaW5oZXJpdDtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuLyogSFRNTDUgZGlzcGxheS1yb2xlIHJlc2V0IGZvciBvbGRlciBicm93c2VycyAqL1xyXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcclxuZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWVudSwgbmF2LCBzZWN0aW9uIHtcclxuXHRkaXNwbGF5OiBibG9jaztcclxufVxyXG5ib2R5IHtcclxuXHRsaW5lLWhlaWdodDogMTtcclxufVxyXG5vbCwgdWwge1xyXG5cdGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn1cclxuYmxvY2txdW90ZSwgcSB7XHJcblx0cXVvdGVzOiBub25lO1xyXG59XHJcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxyXG5xOmJlZm9yZSwgcTphZnRlciB7XHJcblx0Y29udGVudDogJyc7XHJcblx0Y29udGVudDogbm9uZTtcclxufVxyXG50YWJsZSB7XHJcblx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcclxuXHRib3JkZXItc3BhY2luZzogMDtcclxufWAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3Jlc2V0LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTs7O0NBR0M7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7Q0FhQyxTQUFTO0NBQ1QsVUFBVTtDQUNWLFNBQVM7Q0FDVCxlQUFlO0NBQ2YsYUFBYTtDQUNiLHdCQUF3QjtBQUN6QjtBQUNBLGdEQUFnRDtBQUNoRDs7Q0FFQyxjQUFjO0FBQ2Y7QUFDQTtDQUNDLGNBQWM7QUFDZjtBQUNBO0NBQ0MsZ0JBQWdCO0FBQ2pCO0FBQ0E7Q0FDQyxZQUFZO0FBQ2I7QUFDQTs7Q0FFQyxXQUFXO0NBQ1gsYUFBYTtBQUNkO0FBQ0E7Q0FDQyx5QkFBeUI7Q0FDekIsaUJBQWlCO0FBQ2xCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi8qIGh0dHA6Ly9tZXllcndlYi5jb20vZXJpYy90b29scy9jc3MvcmVzZXQvIFxcclxcbiAgIHYyLjAgfCAyMDExMDEyNlxcclxcbiAgIExpY2Vuc2U6IG5vbmUgKHB1YmxpYyBkb21haW4pXFxyXFxuKi9cXHJcXG5cXHJcXG5odG1sLCBib2R5LCBkaXYsIHNwYW4sIGFwcGxldCwgb2JqZWN0LCBpZnJhbWUsXFxyXFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxcclxcbmEsIGFiYnIsIGFjcm9ueW0sIGFkZHJlc3MsIGJpZywgY2l0ZSwgY29kZSxcXHJcXG5kZWwsIGRmbiwgZW0sIGltZywgaW5zLCBrYmQsIHEsIHMsIHNhbXAsXFxyXFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcXHJcXG5iLCB1LCBpLCBjZW50ZXIsXFxyXFxuZGwsIGR0LCBkZCwgb2wsIHVsLCBsaSxcXHJcXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcXHJcXG50YWJsZSwgY2FwdGlvbiwgdGJvZHksIHRmb290LCB0aGVhZCwgdHIsIHRoLCB0ZCxcXHJcXG5hcnRpY2xlLCBhc2lkZSwgY2FudmFzLCBkZXRhaWxzLCBlbWJlZCwgXFxyXFxuZmlndXJlLCBmaWdjYXB0aW9uLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBcXHJcXG5tZW51LCBuYXYsIG91dHB1dCwgcnVieSwgc2VjdGlvbiwgc3VtbWFyeSxcXHJcXG50aW1lLCBtYXJrLCBhdWRpbywgdmlkZW8ge1xcclxcblxcdG1hcmdpbjogMDtcXHJcXG5cXHRwYWRkaW5nOiAwO1xcclxcblxcdGJvcmRlcjogMDtcXHJcXG5cXHRmb250LXNpemU6IDEwMCU7XFxyXFxuXFx0Zm9udDogaW5oZXJpdDtcXHJcXG5cXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XFxyXFxufVxcclxcbi8qIEhUTUw1IGRpc3BsYXktcm9sZSByZXNldCBmb3Igb2xkZXIgYnJvd3NlcnMgKi9cXHJcXG5hcnRpY2xlLCBhc2lkZSwgZGV0YWlscywgZmlnY2FwdGlvbiwgZmlndXJlLCBcXHJcXG5mb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtZW51LCBuYXYsIHNlY3Rpb24ge1xcclxcblxcdGRpc3BsYXk6IGJsb2NrO1xcclxcbn1cXHJcXG5ib2R5IHtcXHJcXG5cXHRsaW5lLWhlaWdodDogMTtcXHJcXG59XFxyXFxub2wsIHVsIHtcXHJcXG5cXHRsaXN0LXN0eWxlOiBub25lO1xcclxcbn1cXHJcXG5ibG9ja3F1b3RlLCBxIHtcXHJcXG5cXHRxdW90ZXM6IG5vbmU7XFxyXFxufVxcclxcbmJsb2NrcXVvdGU6YmVmb3JlLCBibG9ja3F1b3RlOmFmdGVyLFxcclxcbnE6YmVmb3JlLCBxOmFmdGVyIHtcXHJcXG5cXHRjb250ZW50OiAnJztcXHJcXG5cXHRjb250ZW50OiBub25lO1xcclxcbn1cXHJcXG50YWJsZSB7XFxyXFxuXFx0Ym9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcXHJcXG5cXHRib3JkZXItc3BhY2luZzogMDtcXHJcXG59XCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9nZXRVcmwuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyA9IG5ldyBVUkwoXCIuL3BvcnRhYmxlamltLUNoZXNzLXRpbGUtS25pZ2h0LTIuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18gPSBuZXcgVVJMKFwiLi90YXJnZXQtMzkuc3ZnXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgLyogU21hbGwgc2NyZWVucyAtIE1PQklMRSAqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4ge1xyXG4gIDpyb290IHtcclxuICAgIC0tbWluLXJlczogY2FsYyhtaW4oOTd2aCwgOTd2dykpO1xyXG4gIH1cclxuXHJcbiAgKiB7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgfVxyXG5cclxuICAqOm5vdChpbWcpIHtcclxuICAgIHVzZXItc2VsZWN0OiBub25lO1xyXG4gICAgLXdlYmtpdC11c2VyLWRyYWc6IG5vbmU7XHJcbiAgfVxyXG5cclxuICBib2R5IHtcclxuICAgIHdpZHRoOiAxMDB2dztcclxuICAgIGhlaWdodDogMTAwdmg7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIH1cclxuXHJcbiAgI2NoZXNzYm9hcmQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICB3aWR0aDogdmFyKC0tbWluLXJlcyk7XHJcbiAgICBoZWlnaHQ6IHZhcigtLW1pbi1yZXMpO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDEuOHZ3O1xyXG4gICAgZm9udC1mYW1pbHk6ICdHaWxsIFNhbnMnLCAnR2lsbCBTYW5zIE1UJywgQ2FsaWJyaSwgJ1RyZWJ1Y2hldCBNUycsIHNhbnMtc2VyaWY7XHJcbiAgfVxyXG5cclxuICAjdG9wTWFyZ2luLCAjYm90dG9tTWFyZ2luIHtcclxuICAgIHdpZHRoOiA5MiU7XHJcbiAgICBoZWlnaHQ6IDQlO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAubGV0dGVyIHtcclxuICAgIHdpZHRoOiAxMi41JTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICNtaWRkbGVTZWN0aW9uIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiA5MiU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICNsZWZ0TWFyZ2luLCAjcmlnaHRNYXJnaW4ge1xyXG4gICAgd2lkdGg6IDQlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgcGFkZGluZy10b3A6IDclO1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG5cclxuICAuZGlnaXQge1xyXG4gICAgaGVpZ2h0OiAxMi41JTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcblxyXG4gICNhY3R1YWxCb2FyZCB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB3aWR0aDogOTIlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgI2hvcnNlSWNvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb250ZW50OiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19ffSk7XHJcbiAgICB3aWR0aDogMTAlO1xyXG4gICAgaGVpZ2h0OiAxMCU7XHJcbiAgfVxyXG5cclxuICAjdGFyZ2V0SWNvbiB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBjb250ZW50OiB1cmwoJHtfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19ffSk7XHJcbiAgICB3aWR0aDogMTAlO1xyXG4gICAgaGVpZ2h0OiAxMCU7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gIH1cclxuXHJcbiAgLnJvdyB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTIuNSU7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxuXHJcblxyXG4gIC5zcXVhcmUge1xyXG4gICAgd2lkdGg6IDEyLjUlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgLnJvdzpudGgtY2hpbGQoMm4pIC5zcXVhcmU6bnRoLWNoaWxkKDJuKSxcclxuICAucm93Om50aC1jaGlsZCgybiAtIDEpIC5zcXVhcmU6bnRoLWNoaWxkKDJuIC0gMSkge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDIwOSwgMTM5LCA3MSk7XHJcbiAgfVxyXG5cclxuICAucm93Om50aC1jaGlsZCgybikgLnNxdWFyZTpudGgtY2hpbGQoMm4gLSAxKSxcclxuICAucm93Om50aC1jaGlsZCgybiAtIDEpIC5zcXVhcmU6bnRoLWNoaWxkKDJuKSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyMDYsIDE1OCk7XHJcbiAgfVxyXG5cclxufVxyXG5cclxuLyogTWVkaXVtIC0gTGFyZ2Ugc2NyZWVucyAqL1xyXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQwLjA2M2VtKSB7XHJcbn0gLyogbWluLXdpZHRoIDY0MXB4LCBtZWRpdW0gc2NyZWVucyAqL1xyXG5gLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBLDJCQUEyQjtBQUMzQjtFQUNFO0lBQ0UsZ0NBQWdDO0VBQ2xDOztFQUVBO0lBQ0UsWUFBWTtFQUNkOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLHVCQUF1QjtFQUN6Qjs7RUFFQTtJQUNFLFlBQVk7SUFDWixhQUFhO0lBQ2IsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSx1QkFBdUI7SUFDdkIscUJBQXFCO0lBQ3JCLHNCQUFzQjtJQUN0QixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLDZFQUE2RTtFQUMvRTs7RUFFQTtJQUNFLFVBQVU7SUFDVixVQUFVO0lBQ1YsYUFBYTtJQUNiLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLFlBQVk7SUFDWixrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsV0FBVztJQUNYLGFBQWE7SUFDYixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxTQUFTO0lBQ1QsWUFBWTtJQUNaLGVBQWU7SUFDZixhQUFhO0lBQ2Isc0JBQXNCO0VBQ3hCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixVQUFVO0lBQ1YsWUFBWTtFQUNkOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGdEQUFxRDtJQUNyRCxVQUFVO0lBQ1YsV0FBVztFQUNiOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGdEQUErQjtJQUMvQixVQUFVO0lBQ1YsV0FBVztJQUNYLGFBQWE7RUFDZjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxhQUFhO0lBQ2IsYUFBYTtFQUNmOzs7RUFHQTtJQUNFLFlBQVk7SUFDWixZQUFZO0VBQ2Q7O0VBRUE7O0lBRUUsbUNBQW1DO0VBQ3JDOztFQUVBOztJQUVFLG9DQUFvQztFQUN0Qzs7QUFFRjs7QUFFQSwyQkFBMkI7QUFDM0I7QUFDQSxFQUFFLG9DQUFvQ1wiLFwic291cmNlc0NvbnRlbnRcIjpbXCIvKiBTbWFsbCBzY3JlZW5zIC0gTU9CSUxFICovXFxyXFxuQG1lZGlhIG9ubHkgc2NyZWVuIHtcXHJcXG4gIDpyb290IHtcXHJcXG4gICAgLS1taW4tcmVzOiBjYWxjKG1pbig5N3ZoLCA5N3Z3KSk7XFxyXFxuICB9XFxyXFxuXFxyXFxuICAqIHtcXHJcXG4gICAgY29sb3I6IHdoaXRlO1xcclxcbiAgfVxcclxcblxcclxcbiAgKjpub3QoaW1nKSB7XFxyXFxuICAgIHVzZXItc2VsZWN0OiBub25lO1xcclxcbiAgICAtd2Via2l0LXVzZXItZHJhZzogbm9uZTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIGJvZHkge1xcclxcbiAgICB3aWR0aDogMTAwdnc7XFxyXFxuICAgIGhlaWdodDogMTAwdmg7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgfVxcclxcblxcclxcbiAgI2NoZXNzYm9hcmQge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXHJcXG4gICAgd2lkdGg6IHZhcigtLW1pbi1yZXMpO1xcclxcbiAgICBoZWlnaHQ6IHZhcigtLW1pbi1yZXMpO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXHJcXG4gICAgZm9udC1zaXplOiAxLjh2dztcXHJcXG4gICAgZm9udC1mYW1pbHk6ICdHaWxsIFNhbnMnLCAnR2lsbCBTYW5zIE1UJywgQ2FsaWJyaSwgJ1RyZWJ1Y2hldCBNUycsIHNhbnMtc2VyaWY7XFxyXFxuICB9XFxyXFxuXFxyXFxuICAjdG9wTWFyZ2luLCAjYm90dG9tTWFyZ2luIHtcXHJcXG4gICAgd2lkdGg6IDkyJTtcXHJcXG4gICAgaGVpZ2h0OiA0JTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC5sZXR0ZXIge1xcclxcbiAgICB3aWR0aDogMTIuNSU7XFxyXFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gICNtaWRkbGVTZWN0aW9uIHtcXHJcXG4gICAgd2lkdGg6IDEwMCU7XFxyXFxuICAgIGhlaWdodDogOTIlO1xcclxcbiAgICBkaXNwbGF5OiBmbGV4O1xcclxcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcclxcbiAgfVxcclxcblxcclxcbiAgI2xlZnRNYXJnaW4sICNyaWdodE1hcmdpbiB7XFxyXFxuICAgIHdpZHRoOiA0JTtcXHJcXG4gICAgaGVpZ2h0OiAxMDAlO1xcclxcbiAgICBwYWRkaW5nLXRvcDogNyU7XFxyXFxuICAgIGRpc3BsYXk6IGZsZXg7XFxyXFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxyXFxuICB9XFxyXFxuXFxyXFxuICAuZGlnaXQge1xcclxcbiAgICBoZWlnaHQ6IDEyLjUlO1xcclxcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxyXFxuICB9XFxyXFxuXFxyXFxuICAjYWN0dWFsQm9hcmQge1xcclxcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XFxyXFxuICAgIHdpZHRoOiA5MiU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gICNob3JzZUljb24ge1xcclxcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxyXFxuICAgIGNvbnRlbnQ6IHVybChcXFwiLi9wb3J0YWJsZWppbS1DaGVzcy10aWxlLUtuaWdodC0yLnN2Z1xcXCIpO1xcclxcbiAgICB3aWR0aDogMTAlO1xcclxcbiAgICBoZWlnaHQ6IDEwJTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gICN0YXJnZXRJY29uIHtcXHJcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcclxcbiAgICBjb250ZW50OiB1cmwoXFxcIi4vdGFyZ2V0LTM5LnN2Z1xcXCIpO1xcclxcbiAgICB3aWR0aDogMTAlO1xcclxcbiAgICBoZWlnaHQ6IDEwJTtcXHJcXG4gICAgZGlzcGxheTogbm9uZTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC5yb3cge1xcclxcbiAgICB3aWR0aDogMTAwJTtcXHJcXG4gICAgaGVpZ2h0OiAxMi41JTtcXHJcXG4gICAgZGlzcGxheTogZmxleDtcXHJcXG4gIH1cXHJcXG5cXHJcXG5cXHJcXG4gIC5zcXVhcmUge1xcclxcbiAgICB3aWR0aDogMTIuNSU7XFxyXFxuICAgIGhlaWdodDogMTAwJTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC5yb3c6bnRoLWNoaWxkKDJuKSAuc3F1YXJlOm50aC1jaGlsZCgybiksXFxyXFxuICAucm93Om50aC1jaGlsZCgybiAtIDEpIC5zcXVhcmU6bnRoLWNoaWxkKDJuIC0gMSkge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjA5LCAxMzksIDcxKTtcXHJcXG4gIH1cXHJcXG5cXHJcXG4gIC5yb3c6bnRoLWNoaWxkKDJuKSAuc3F1YXJlOm50aC1jaGlsZCgybiAtIDEpLFxcclxcbiAgLnJvdzpudGgtY2hpbGQoMm4gLSAxKSAuc3F1YXJlOm50aC1jaGlsZCgybikge1xcclxcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjU1LCAyMDYsIDE1OCk7XFxyXFxuICB9XFxyXFxuXFxyXFxufVxcclxcblxcclxcbi8qIE1lZGl1bSAtIExhcmdlIHNjcmVlbnMgKi9cXHJcXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQwLjA2M2VtKSB7XFxyXFxufSAvKiBtaW4td2lkdGggNjQxcHgsIG1lZGl1bSBzY3JlZW5zICovXFxyXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTtcblxuICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfVxuXG4gIC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHtcblx0XHRcdHZhciBpID0gc2NyaXB0cy5sZW5ndGggLSAxO1xuXHRcdFx0d2hpbGUgKGkgPiAtMSAmJiAhc2NyaXB0VXJsKSBzY3JpcHRVcmwgPSBzY3JpcHRzW2ktLV0uc3JjO1xuXHRcdH1cblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0ODI2OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9yZXNldC5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3Jlc2V0LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImNvbnN0IHZpcnR1YWxLbmlnaHQgPSAoKCkgPT4ge1xyXG4gIGxldCB4ID0gMDtcclxuICBsZXQgeSA9IDA7XHJcbiAgY29uc3QgU0laRV9DQVAgPSA4OyAvLyBkb24ndCB3YW50IGFueSBzaGVuYW5pZ2FucyBmb3Igbm93XHJcblxyXG4gIGNvbnN0IHBsYWNlQXQgPSAoeE5ldywgeU5ldykgPT4ge1xyXG4gICAgeCA9IHhOZXc7XHJcbiAgICB5ID0geU5ldztcclxuICB9O1xyXG5cclxuICBjb25zdCB0cmF2ZXJzZVRvID0gKHhDdXIsIHlDdXIsIHhUYXJnZXQsIHlUYXJnZXQsIGRlcHRoKSA9PiB7XHJcbiAgICBpZiAoZGVwdGggPT09IDApIHtcclxuICAgICAgaWYgKHhDdXIgPT09IHhUYXJnZXQgJiYgeUN1ciA9PT0geVRhcmdldCkgcmV0dXJuIFtbeEN1ciwgeUN1cl1dO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBpZiAoeEN1ciA+PSBTSVpFX0NBUCB8fCB5Q3VyID49IFNJWkVfQ0FQIHx8IHhDdXIgPCAwIHx8IHlDdXIgPCAwKSByZXR1cm4gZmFsc2U7XHJcbiAgICBsZXQgcGF0aCA9XHJcbiAgICAgIHRyYXZlcnNlVG8oeEN1ciArIDEsIHlDdXIgKyAyLCB4VGFyZ2V0LCB5VGFyZ2V0LCBkZXB0aCAtIDEpIHx8XHJcbiAgICAgIHRyYXZlcnNlVG8oeEN1ciArIDIsIHlDdXIgKyAxLCB4VGFyZ2V0LCB5VGFyZ2V0LCBkZXB0aCAtIDEpIHx8XHJcbiAgICAgIHRyYXZlcnNlVG8oeEN1ciArIDIsIHlDdXIgLSAxLCB4VGFyZ2V0LCB5VGFyZ2V0LCBkZXB0aCAtIDEpIHx8XHJcbiAgICAgIHRyYXZlcnNlVG8oeEN1ciArIDEsIHlDdXIgLSAyLCB4VGFyZ2V0LCB5VGFyZ2V0LCBkZXB0aCAtIDEpIHx8XHJcbiAgICAgIHRyYXZlcnNlVG8oeEN1ciAtIDEsIHlDdXIgLSAyLCB4VGFyZ2V0LCB5VGFyZ2V0LCBkZXB0aCAtIDEpIHx8XHJcbiAgICAgIHRyYXZlcnNlVG8oeEN1ciAtIDIsIHlDdXIgLSAxLCB4VGFyZ2V0LCB5VGFyZ2V0LCBkZXB0aCAtIDEpIHx8XHJcbiAgICAgIHRyYXZlcnNlVG8oeEN1ciAtIDIsIHlDdXIgKyAxLCB4VGFyZ2V0LCB5VGFyZ2V0LCBkZXB0aCAtIDEpIHx8XHJcbiAgICAgIHRyYXZlcnNlVG8oeEN1ciAtIDEsIHlDdXIgKyAyLCB4VGFyZ2V0LCB5VGFyZ2V0LCBkZXB0aCAtIDEpO1xyXG4gICAgaWYgKHBhdGggIT09IGZhbHNlKSBwYXRoID0gW1t4Q3VyLCB5Q3VyXSwgLi4ucGF0aF07XHJcbiAgICByZXR1cm4gcGF0aDtcclxuICB9O1xyXG5cclxuICBjb25zdCBmaW5kU2hvcnRlc3RQYXRoVG8gPSAoeFRhcmdldCwgeVRhcmdldCkgPT4ge1xyXG4gICAgbGV0IGRlcHRoID0gMDtcclxuICAgIHdoaWxlICh0cnVlICYmIGRlcHRoIDwgU0laRV9DQVApIHtcclxuICAgICAgY29uc3QgcGF0aCA9IHRyYXZlcnNlVG8oeCwgeSwgeFRhcmdldCwgeVRhcmdldCwgZGVwdGgpO1xyXG4gICAgICBpZiAocGF0aCAhPT0gZmFsc2UpIHJldHVybiBwYXRoO1xyXG4gICAgICBkZXB0aCArPSAxO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBwbGFjZUF0LFxyXG4gICAgZmluZFNob3J0ZXN0UGF0aFRvLFxyXG4gIH07XHJcbn0pKCk7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB2aXJ0dWFsS25pZ2h0OyIsIi8qIGVzbGludC1kaXNhYmxlIG5vLXByb21pc2UtZXhlY3V0b3ItcmV0dXJuICovXHJcbi8qIGVzbGludC1kaXNhYmxlIG5vLWF3YWl0LWluLWxvb3AgKi9cclxuY29uc3QgRE9NS25pZ2h0ID0gKCgpID0+IHtcclxuICBsZXQga25pZ2h0RE9NID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNob3JzZUljb25cIik7XHJcbiAgY29uc3QgYWN0dWFsQm9hcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FjdHVhbEJvYXJkXCIpO1xyXG4gIGNvbnN0IHRhcmdldERPTSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdGFyZ2V0SWNvblwiKTtcclxuICBjb25zdCBib2R5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIik7XHJcblxyXG4gIGNvbnN0IHBsYWNlQXQgPSAoeCwgeSkgPT4ge1xyXG4gICAga25pZ2h0RE9NLnN0eWxlLnRvcCA9IFwiYXV0b1wiO1xyXG4gICAga25pZ2h0RE9NLnN0eWxlLmxlZnQgPSBgJHsxICsgeCAqIDEyLjV9JWA7XHJcbiAgICBrbmlnaHRET00uc3R5bGUuYm90dG9tID0gYCR7MSArIHkgKiAxMi41fSVgO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHBsYWNlVGFyZ2V0ID0gKHgsIHkpID0+IHtcclxuICAgIHRhcmdldERPTS5zdHlsZS5sZWZ0ID0gYCR7MSArIHggKiAxMi41fSVgO1xyXG4gICAgdGFyZ2V0RE9NLnN0eWxlLmJvdHRvbSA9IGAkezEgKyB5ICogMTIuNX0lYDtcclxuICAgIHRhcmdldERPTS5zdHlsZS5kaXNwbGF5ID0gXCJpbmxpbmVcIjtcclxuICB9O1xyXG5cclxuICBjb25zdCBoaWRlVGFyZ2V0ID0gKCkgPT4ge1xyXG4gICAgdGFyZ2V0RE9NLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIHRhcmdldERPTS5zdHlsZS5sZWZ0ID0gXCJhdXRvXCI7XHJcbiAgICB0YXJnZXRET00uc3R5bGUuYm90dG9tID0gXCJhdXRvXCI7XHJcbiAgfTtcclxuXHJcbiAgY29uc3QgcmVmcmVzaEtuaWdodCA9ICh4LCB5KSA9PiB7XHJcbiAgICBib2R5LnN0eWxlLnBvaW50ZXJFdmVudHMgPSBcImF1dG9cIjtcclxuICAgIGtuaWdodERPTS5yZW1vdmUoKTtcclxuICAgIGtuaWdodERPTSA9IGtuaWdodERPTS5jbG9uZU5vZGUoKTtcclxuICAgIGFjdHVhbEJvYXJkLmluc2VydEJlZm9yZShrbmlnaHRET00sIGFjdHVhbEJvYXJkLmZpcnN0Q2hpbGQpO1xyXG4gICAgcGxhY2VBdCh4LCB5KTtcclxuICAgIGhpZGVUYXJnZXQoKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IHRyYXZlcnNlUGF0aCA9IGFzeW5jIChwYXRoKSA9PiB7XHJcbiAgICBsZXQgeDtcclxuICAgIGxldCB5O1xyXG4gICAgYm9keS5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7XHJcbiAgICBjb25zdCB0aW1lRHVyYXRpb24gPSAxMDAwO1xyXG4gICAgW3gsIHldID0gWy4uLnBhdGguc2hpZnQoKV07XHJcbiAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICBkdXJhdGlvbjogdGltZUR1cmF0aW9uLFxyXG4gICAgICBpdGVyYXRpb25zOiAxLFxyXG4gICAgICBmaWxsOiBcImZvcndhcmRzXCIsXHJcbiAgICB9O1xyXG4gICAgd2hpbGUgKHBhdGgubGVuZ3RoID4gMCkge1xyXG4gICAgICBsZXQgeFRhcmdldDtcclxuICAgICAgbGV0IHlUYXJnZXQ7XHJcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItY29uc3RcclxuICAgICAgW3hUYXJnZXQsIHlUYXJnZXRdID0gWy4uLnBhdGguc2hpZnQoKV07XHJcbiAgICAgIGNvbnN0IHRyYXZlcnNlTCA9IFtcclxuICAgICAgICB7IGxlZnQ6IGAkezEgKyB4ICogMTIuNX0lYCwgYm90dG9tOiBgJHsxICsgeSAqIDEyLjV9JWAgfSxcclxuICAgICAgICB7IGxlZnQ6IGAkezEgKyB4VGFyZ2V0ICogMTIuNX0lYCwgYm90dG9tOiBgJHsxICsgeVRhcmdldCAqIDEyLjV9JWAgfSxcclxuICAgICAgXTtcclxuICAgICAga25pZ2h0RE9NLmFuaW1hdGUodHJhdmVyc2VMLCBvcHRpb25zKTtcclxuICAgICAgaWYgKHBhdGgubGVuZ3RoID09PSAwKVxyXG4gICAgICAgIGF3YWl0IG5ldyBQcm9taXNlKChyKSA9PiBzZXRUaW1lb3V0KHIsIHRpbWVEdXJhdGlvbikpO1xyXG4gICAgICBlbHNlIGF3YWl0IG5ldyBQcm9taXNlKChyKSA9PiBzZXRUaW1lb3V0KHIsIHRpbWVEdXJhdGlvbiAqIDEuMykpO1xyXG4gICAgICB4ID0geFRhcmdldDtcclxuICAgICAgeSA9IHlUYXJnZXQ7XHJcbiAgICB9XHJcbiAgICByZWZyZXNoS25pZ2h0KHgsIHkpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IG1vdmVLbmlnaHQgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgY29uc3QgYm9hcmRXaWR0aCA9IGFjdHVhbEJvYXJkLmNsaWVudFdpZHRoO1xyXG4gICAgY29uc3QgYm9hcmRIZWlnaHQgPSBhY3R1YWxCb2FyZC5jbGllbnRIZWlnaHQ7XHJcbiAgICBjb25zdCBvZmZzZXQgPSBhY3R1YWxCb2FyZC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIGNvbnN0IHggPSBlLnBhZ2VYIC0gb2Zmc2V0LmxlZnQgLSBib2FyZFdpZHRoIC8gMjU7XHJcbiAgICBjb25zdCB5ID0gZS5wYWdlWSAtIG9mZnNldC50b3AgLSBib2FyZEhlaWdodCAvIDI1O1xyXG4gICAga25pZ2h0RE9NLnN0eWxlLmxlZnQgPSBgJHt4fXB4YDtcclxuICAgIGtuaWdodERPTS5zdHlsZS50b3AgPSBgJHt5fXB4YDtcclxuICB9O1xyXG5cclxuICBjb25zdCBnZXRLbmlnaHRQb3NpdGlvbiA9ICgpID0+IHtcclxuICAgIGNvbnN0IG9mZnNldCA9IGtuaWdodERPTS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgIHJldHVybiBbb2Zmc2V0LmxlZnQsIG9mZnNldC50b3BdO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHNldEV2ZW50TGlzdGVuZXIgPSAodHJpZ2dlciwgY2FsbGJhY2spID0+IHtcclxuICAgIGtuaWdodERPTS5hZGRFdmVudExpc3RlbmVyKHRyaWdnZXIsIGNhbGxiYWNrKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBmb2xsb3dDdXJzb3IgPSAoKSA9PiB7XHJcbiAgICBhY3R1YWxCb2FyZC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vtb3ZlXCIsIG1vdmVLbmlnaHQpO1xyXG4gIH07XHJcblxyXG4gIGNvbnN0IHVuZm9sbG93Q3Vyc29yID0gKCkgPT4ge1xyXG4gICAgYWN0dWFsQm9hcmQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCBtb3ZlS25pZ2h0KTtcclxuICB9O1xyXG5cclxuICByZXR1cm4ge1xyXG4gICAgcGxhY2VBdCxcclxuICAgIHBsYWNlVGFyZ2V0LFxyXG4gICAgdHJhdmVyc2VQYXRoLFxyXG4gICAgZ2V0S25pZ2h0UG9zaXRpb24sXHJcbiAgICBzZXRFdmVudExpc3RlbmVyLFxyXG4gICAgZm9sbG93Q3Vyc29yLFxyXG4gICAgdW5mb2xsb3dDdXJzb3IsXHJcbiAgfTtcclxufSkoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IERPTUtuaWdodDtcclxuIiwiaW1wb3J0IHZpcnR1YWxLbmlnaHQgZnJvbSBcIi4vdmlydHVhbEtuaWdodFwiO1xyXG5pbXBvcnQgRE9NS25pZ2h0IGZyb20gXCIuL0RPTUtuaWdodFwiO1xyXG5pbXBvcnQgRE9NU3F1YXJlIGZyb20gXCIuL0RPTVNxdWFyZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY2hlc3Nib2FyZCgpIHtcclxuICBsZXQgeEN1cnJlbnQgPSAwO1xyXG4gIGxldCB5Q3VycmVudCA9IDA7XHJcbiAgY29uc3Qgc3F1YXJlQXJyYXkgPSBbXTtcclxuXHJcbiAgZnVuY3Rpb24gcGlja0hvcnNlKCkge1xyXG4gICAgRE9NS25pZ2h0LmZvbGxvd0N1cnNvcigpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gcmVsZWFzZUhvcnNlKCkge1xyXG4gICAgRE9NS25pZ2h0LnVuZm9sbG93Q3Vyc29yKCk7XHJcbiAgICBjb25zdCBYWSA9IERPTUtuaWdodC5nZXRLbmlnaHRQb3NpdGlvbigpO1xyXG4gICAgbGV0IHNob3J0ZXN0RGlzdGFuY2UgPSAxMDAwMDA7XHJcbiAgICBsZXQga25pZ2h0U3F1YXJlO1xyXG4gICAgc3F1YXJlQXJyYXkuZm9yRWFjaCgoc3F1YXJlKSA9PiB7XHJcbiAgICAgIGNvbnN0IGRpc3RhbmNlID0gc3F1YXJlLmdldERpc3RhbmNlKC4uLlhZKTtcclxuICAgICAgaWYgKGRpc3RhbmNlIDwgc2hvcnRlc3REaXN0YW5jZSkge1xyXG4gICAgICAgIHNob3J0ZXN0RGlzdGFuY2UgPSBkaXN0YW5jZTtcclxuICAgICAgICBrbmlnaHRTcXVhcmUgPSBzcXVhcmU7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgW3hDdXJyZW50LCB5Q3VycmVudF0gPSBbLi4ua25pZ2h0U3F1YXJlLmdldFhZKCldO1xyXG4gICAgdmlydHVhbEtuaWdodC5wbGFjZUF0KHhDdXJyZW50LCB5Q3VycmVudCk7XHJcbiAgICBET01LbmlnaHQucGxhY2VBdCh4Q3VycmVudCwgeUN1cnJlbnQpO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgZnVuY3Rpb24gdHJhdmVyc2VQYXRoKHgsIHkpIHtcclxuICAgIGlmICh4ICE9PSB4Q3VycmVudCB8fCB5ICE9PSB5Q3VycmVudCkge1xyXG4gICAgICBET01LbmlnaHQucGxhY2VUYXJnZXQoeCwgeSk7XHJcbiAgICAgIGNvbnN0IHBhdGggPSB2aXJ0dWFsS25pZ2h0LmZpbmRTaG9ydGVzdFBhdGhUbyh4LCB5KTtcclxuICAgICAgYXdhaXQgRE9NS25pZ2h0LnRyYXZlcnNlUGF0aChwYXRoKTtcclxuICAgICAgRE9NS25pZ2h0LnNldEV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgcGlja0hvcnNlKTtcclxuICAgICAgRE9NS25pZ2h0LnNldEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIHJlbGVhc2VIb3JzZSk7XHJcbiAgICAgIHZpcnR1YWxLbmlnaHQucGxhY2VBdCh4LCB5KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGluaXQoKSB7XHJcbiAgICB2aXJ0dWFsS25pZ2h0LnBsYWNlQXQoeEN1cnJlbnQsIHlDdXJyZW50KTtcclxuICAgIERPTUtuaWdodC5wbGFjZUF0KHhDdXJyZW50LCB5Q3VycmVudCk7XHJcbiAgICBET01LbmlnaHQuc2V0RXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBwaWNrSG9yc2UpO1xyXG4gICAgRE9NS25pZ2h0LnNldEV2ZW50TGlzdGVuZXIoXCJtb3VzZXVwXCIsIHJlbGVhc2VIb3JzZSk7XHJcblxyXG4gICAgY29uc3Qgcm93cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucm93XCIpO1xyXG4gICAgbGV0IHkgPSA3O1xyXG4gICAgcm93cy5mb3JFYWNoKChyb3cpID0+IHtcclxuICAgICAgY29uc3Qgc3F1YXJlcyA9IHJvdy5xdWVyeVNlbGVjdG9yQWxsKFwiLnNxdWFyZVwiKTtcclxuICAgICAgbGV0IHggPSAwO1xyXG4gICAgICBzcXVhcmVzLmZvckVhY2goKHNxdWFyZSkgPT4ge1xyXG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wbHVzcGx1c1xyXG4gICAgICAgIGNvbnN0IGNoZXNzU3F1YXJlID0gRE9NU3F1YXJlKHgrKywgeSwgc3F1YXJlKTtcclxuICAgICAgICBjaGVzc1NxdWFyZS5zZXRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdHJhdmVyc2VQYXRoKTtcclxuICAgICAgICBzcXVhcmVBcnJheS5wdXNoKGNoZXNzU3F1YXJlKTtcclxuICAgICAgfSk7XHJcbiAgICAgIHkgLT0gMTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIGluaXQsXHJcbiAgfTtcclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBET01TcXVhcmUoeCwgeSwgc3F1YXJlKSB7XHJcblxyXG4gIGZ1bmN0aW9uIHNldEV2ZW50TGlzdGVuZXIoZXZlbnQsIG9uVHJhdmVyc2Upe1xyXG4gICAgc3F1YXJlLmFkZEV2ZW50TGlzdGVuZXIoZXZlbnQsICgpID0+IG9uVHJhdmVyc2UoeCwgeSkpO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0RGlzdGFuY2UodGFyZ2V0WCwgdGFyZ2V0WSkge1xyXG4gICAgY29uc3Qgb2Zmc2V0ID0gc3F1YXJlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgY29uc3QgeE9mZnNldCA9IG9mZnNldC5sZWZ0O1xyXG4gICAgY29uc3QgeU9mZnNldCA9IG9mZnNldC50b3A7XHJcbiAgICBjb25zdCBkaXN0YW5jZSA9IE1hdGguc3FydChcclxuICAgICAgKHRhcmdldFggLSB4T2Zmc2V0KSAqKiAyICsgKHRhcmdldFkgLSB5T2Zmc2V0KSAqKiAyXHJcbiAgICApO1xyXG4gICAgcmV0dXJuIGRpc3RhbmNlO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gZ2V0WFkoKSB7XHJcbiAgICByZXR1cm4gW3gsIHldO1xyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHtcclxuICAgIHNldEV2ZW50TGlzdGVuZXIsXHJcbiAgICBnZXREaXN0YW5jZSxcclxuICAgIGdldFhZLFxyXG4gIH07XHJcbn1cclxuIiwiaW1wb3J0IFwiLi9zdHlsZXMuY3NzXCI7XHJcbmltcG9ydCBcIi4vcmVzZXQuY3NzXCI7XHJcbmltcG9ydCBjaGVzc2JvYXJkIGZyb20gXCIuL2NoZXNzYm9hcmRcIjtcclxuXHJcbmNvbnN0IG15Q2hlc3Nib2FyZCA9IGNoZXNzYm9hcmQoKTtcclxubXlDaGVzc2JvYXJkLmluaXQoKTsiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18iLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIm5jIiwibG9jYWxzIiwieCIsInkiLCJ0cmF2ZXJzZVRvIiwieEN1ciIsInlDdXIiLCJ4VGFyZ2V0IiwieVRhcmdldCIsImRlcHRoIiwicGF0aCIsInBsYWNlQXQiLCJ4TmV3IiwieU5ldyIsImZpbmRTaG9ydGVzdFBhdGhUbyIsIkRPTUtuaWdodCIsImtuaWdodERPTSIsImFjdHVhbEJvYXJkIiwidGFyZ2V0RE9NIiwiYm9keSIsInRvcCIsImxlZnQiLCJib3R0b20iLCJtb3ZlS25pZ2h0IiwiYm9hcmRXaWR0aCIsImNsaWVudFdpZHRoIiwiYm9hcmRIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJvZmZzZXQiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJwYWdlWCIsInBhZ2VZIiwicGxhY2VUYXJnZXQiLCJkaXNwbGF5IiwidHJhdmVyc2VQYXRoIiwiYXN5bmMiLCJwb2ludGVyRXZlbnRzIiwic2hpZnQiLCJkdXJhdGlvbiIsIml0ZXJhdGlvbnMiLCJmaWxsIiwidHJhdmVyc2VMIiwiYW5pbWF0ZSIsIlByb21pc2UiLCJyIiwic2V0VGltZW91dCIsInRpbWVEdXJhdGlvbiIsInJlZnJlc2hLbmlnaHQiLCJjbG9uZU5vZGUiLCJpbnNlcnRCZWZvcmUiLCJnZXRLbmlnaHRQb3NpdGlvbiIsInNldEV2ZW50TGlzdGVuZXIiLCJ0cmlnZ2VyIiwiY2FsbGJhY2siLCJhZGRFdmVudExpc3RlbmVyIiwiZm9sbG93Q3Vyc29yIiwidW5mb2xsb3dDdXJzb3IiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwieEN1cnJlbnQiLCJ5Q3VycmVudCIsInNxdWFyZUFycmF5IiwicGlja0hvcnNlIiwicmVsZWFzZUhvcnNlIiwiWFkiLCJrbmlnaHRTcXVhcmUiLCJzaG9ydGVzdERpc3RhbmNlIiwiZm9yRWFjaCIsInNxdWFyZSIsImRpc3RhbmNlIiwiZ2V0RGlzdGFuY2UiLCJnZXRYWSIsInZpcnR1YWxLbmlnaHQiLCJpbml0Iiwicm93cyIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJyb3ciLCJzcXVhcmVzIiwiY2hlc3NTcXVhcmUiLCJldmVudCIsIm9uVHJhdmVyc2UiLCJ0YXJnZXRYIiwidGFyZ2V0WSIsInhPZmZzZXQiLCJ5T2Zmc2V0IiwiTWF0aCIsInNxcnQiLCJET01TcXVhcmUiLCJjaGVzc2JvYXJkIl0sInNvdXJjZVJvb3QiOiIifQ==